from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import requests
from telegram.ext import MessageHandler, filters
from datetime import datetime

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")

async def weather(update: Update, context: ContextTypes.DEFAULT_TYPE):

    if context.args:
        city = context.args[0]
        url = f"https://api.weatherapi.com/v1/current.json?key=6465d9942ba74529b9a135645250509&q={city}&lang=ru"
        response = requests.get(url)
        data = response.json()
        temperature = data['current']['temp_c']
        description = data['current']['condition']['text']
        await update.message.reply_text(f"–í {city} {temperature}¬∞C, {description}")
    else:
        await update.message.reply_text(f"–ù–∞–ø–∏—à–∏ /weather –∏ –≥–æ—Ä–æ–¥")


from datetime import datetime


async def timer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    target_date = datetime(2025, 11, 6)  # –¶–µ–ª–µ–≤–∞—è –¥–∞—Ç–∞
    current_date = datetime.now()  # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
    time_left = target_date - current_date  # –†–∞–∑–Ω–∏—Ü–∞

    days = time_left.days
    hours = time_left.seconds // 3600
    minutes = (time_left.seconds % 3600) // 60
    seconds = time_left.seconds % 60

    await update.message.reply_text(f"–î–æ –¥–µ–º–±–µ–ª—è: {days} –¥–Ω–µ–π, {hours} —á–∞—Å–æ–≤, {minutes} –º–∏–Ω—É—Ç, {seconds} —Å–µ–∫—É–Ω–¥")


async def kurs(update: Update, context: ContextTypes.DEFAULT_TYPE):
        a = f"https://api.freecurrencyapi.com/v1/latest?apikey=fca_live_TXj6w119qbwxQiTKMU67WSAWvbjJnvsjqvmuD8Oj&currencies=RUB%2CEUR%2CUSD"
        b = requests.get(a)
        data = b.json()
        ru = data['data']['RUB']
        await update.message.reply_text(f"–ö—É—Ä—Å –†—É–±–ª—è = {ru}")



async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text.lower()  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É

    if "–ø—Ä–∏–≤–µ—Ç" in user_text:
        await update.message.reply_text("–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç! üòä")
    elif "–∫–∞–∫ –¥–µ–ª–∞" in user_text:
        await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è?")
    elif "–¥–∏–º–∞" in user_text or "–¥–∏–º–µ" in user_text or "–¥–∏–º–∞—Å–∏–∫" in user_text:
        await update.message.reply_text("–û–æ–æ–æ, –î–∏–º–∞—Å–∏–∫, —Å–ª—ã—à–∞–ª –æ –Ω–µ–º, –∫–ª–∞—Å—Å–Ω—ã–π –ø–∞—Ä–µ–Ω—å @gygygy44")
    elif "–¥–∞–≤–∞–π –∫—Ä–∞–±–∞" in user_text:
        await update.message.reply_text("–ù–∞ü¶Ä")
    elif "—Ç—ã –ø–∏–¥–æ—Ä?" in user_text:
        await update.message.reply_text("–¥–∞!")
    elif "—Ö—É–π–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–µ" in user_text or "—Ö–µ—Ä–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω" in user_text:
        await update.message.reply_text("–º–æ–π –ø–∞—Ä–µ–Ω—å –ª—é–±–∏—Ç –∫–æ–≥–¥–∞ –µ—Å—Ç—å –∑–∞ —á—Ç–æ –¥–µ—Ä–∂–∞—Ç—å—Å—è!")
    elif "–∞ —á–µ —Ç–∞–∫ –≥–æ—Ä–¥–æ?" in user_text:
        await update.message.reply_text("–Ø –≥–æ—Ä–¥—ã–π –ø–∏–¥–æ—Ä–∞—Å–∏–∫!")
    else:
        return



TOKEN = "8226370714:AAHyhzM0QuoYOPihLn_npm4KUc8BRSc7ItY"

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("weather", weather))
app.add_handler(CommandHandler("kurs", kurs))
app.add_handler(CommandHandler("data", timer))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler))

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
app.run_polling()